{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","item","useState","status","setStatus","weight","rgb","type","useEffect","interval","setInterval","clearInterval","colorCode","onClick","navigator","clipboard","writeText","className","style","backgroundColor","App","color","setColor","err","setError","list","setList","data","Values","all","placeholder","value","onChange","e","target","preventDefault","error","console","log","renderData","map","index","rootElement","document","getElementById","createRoot","render"],"mappings":"mNAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAsB,IAAfD,EAAIE,OAAe,IAAMF,EAAMA,CACxC,CAMeG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,EACtE,E,OC+BeC,EAnCK,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACrB,EAA4BC,oBAAS,GAAM,mBAApCC,EAAM,KAAEC,EAAS,KAEhBC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,IAAKC,EAASN,EAATM,KAOrBC,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAE3B,OADAN,GAAU,GACH,kBAAMO,cAAcF,EAAU,CACvC,GAAG,IACL,GAAG,CAACN,IAIJ,IAAIS,EAAYhB,EAAQ,yBAAIU,IAG5B,OACE,0BACEO,QAnBJ,WACEC,UAAUC,UAAUC,UAAUJ,GAC9BR,GAAU,EACZ,EAiBIa,UAAS,gBAAoB,UAATV,GAAoB,eACxCW,MAAO,CAAEC,gBAAgB,GAAD,OAAKP,IAAc,UAE3C,oBAAGK,UAAU,gBAAe,UAAEZ,EAAM,OACpC,mBAAGY,UAAU,cAAa,SAAEL,IAC3BT,EAAS,mBAAGc,UAAU,QAAO,kCAA4B,KAGhE,E,gBCwBeG,MAvDf,WACE,MAA0BlB,mBAAS,IAAG,mBAA/BmB,EAAK,KAAEC,EAAQ,KACtB,EAAwBpB,oBAAS,GAAM,mBAAhCqB,EAAG,KAAEC,EAAQ,KACpB,EAAwBtB,mBAAS,IAAG,mBAA7BuB,EAAI,KAAEC,EAAO,KA0BpB,OAZAlB,qBAAU,WACR,IAAImB,EAAO,IAAIC,IAAO,WACtBF,EAAQC,EAAKE,IAAI,IACnB,GAAG,IAUD,qCACE,0BAASZ,UAAU,YAAW,UAC5B,iDACA,iCACE,uBACEA,UAAWM,EAAM,QAAU,OAC3BhB,KAAK,OACLuB,YAAY,UACZC,MAAOV,EACPW,SAAU,SAACC,GAAC,OAAKX,EAASW,EAAEC,OAAOH,MAAM,IAE3C,wBAAQlB,QAjBhB,SAAqBoB,GACnBA,EAAEE,iBApBJ,WACE,IACE,IAAIR,EAAO,IAAIC,IAAOP,GACtBK,EAAQC,EAAKE,IAAI,KACjBL,GAAS,EAKX,CAHE,MAAOY,GACPZ,GAAS,GACTa,QAAQC,IAAIF,EACd,CACF,CAWEG,EACF,EAcsChC,KAAK,SAASU,UAAU,MAAK,0BAK/D,yBAASA,UAAU,SAAQ,SACxBQ,EAAKe,KAAI,SAACvC,EAAMwC,GACf,OAAO,cAAC,EAAW,CAAaxC,KAAMA,GAAbwC,EAC3B,QAIR,ECpDMC,G,MAAcC,SAASC,eAAe,SAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,EAAG,M","file":"static/js/main.da260528.chunk.js","sourcesContent":["function componentToHex(c) {\r\n  let hex = c.toString(16);\r\n  return hex.length === 1 ? \"0\" + hex : hex;\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport default rgbToHex;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport rgbToHex from \"./utils\";\r\n\r\nconst SingleColor = ({ item }) => {\r\n  const [status, setStatus] = useState(false);\r\n\r\n  const { weight, rgb, type } = item;\r\n\r\n  function copyText() {\r\n    navigator.clipboard.writeText(colorCode);\r\n    setStatus(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setStatus(false);\r\n      return () => clearInterval(interval);\r\n    }, 8000);\r\n  }, [status]);\r\n\r\n  // let colorCode = rgbToHex(rgb[0],rgb[1],rgb[2]);\r\n\r\n  let colorCode = rgbToHex(...rgb);\r\n  // console.log(colorCode);\r\n\r\n  return (\r\n    <article\r\n      onClick={copyText}\r\n      className={`color ${type === \"shade\" && \"color-light\"}`}\r\n      style={{ backgroundColor: `${colorCode}` }}\r\n    >\r\n      <p className=\"percent-value\">{weight}%</p>\r\n      <p className=\"color-value\">{colorCode}</p>\r\n      {status ? <p className=\"alert\">Copyied to clipboard</p> : \"\"}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default SingleColor;\r\n","import React, { useEffect, useState } from \"react\";\nimport SingleColor from \"./SingleColor\";\n\nimport Values from \"values.js\";\n\nfunction App() {\n  const [color, setColor] = useState(\"\");\n  const [err, setError] = useState(false);\n  const [list, setList] = useState([]);\n\n  function renderData() {\n    try {\n      let data = new Values(color);\n      setList(data.all(10));\n      setError(false);\n      // console.log(data);\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    let data = new Values(\"#f15025\");\n    setList(data.all(10));\n  }, []);\n\n  // console.log(color);\n\n  function handleClick(e) {\n    e.preventDefault();\n    renderData();\n  }\n\n  return (\n    <>\n      <section className=\"container\">\n        <h3>Color Generator</h3>\n        <form>\n          <input\n            className={err ? \"error\" : \"null\"}\n            type=\"text\"\n            placeholder=\"#f15025\"\n            value={color}\n            onChange={(e) => setColor(e.target.value)}\n          />\n          <button onClick={handleClick} type=\"submit\" className=\"btn\">\n            submit\n          </button>\n        </form>\n      </section>\n      <section className=\"colors\">\n        {list.map((item, index) => {\n          return <SingleColor key={index} item={item} />;\n        })}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}